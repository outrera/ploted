TODO:
- createProcessingModule should first show dialogue with tree of dependencies, consisting of processing modules; there should be a way to check/uncheck each processing module, which would mark it as the end of a branch; differentiate somehow between operands and other arguments
- implement creating group above/below or moving group using mouse
- curveEditor shouldn't allow picking the edited curve itself; disallow adding groups under itself and fix adding groups containing other items
- if there are cycles in curve graph, then Curve::update() could hang app
- curveEditor should support changing operation interactively: show list of all operations on the left
- set title text for each dialogue, so "stand-calc" wont popup
- add dialog asking user, if he really wants delete curves or quit app
- auto-sort view by item type and name
- add function "update", which would sanitize treeview, removing all removed curves and introducing new ones
- widget of setIndexWidget should handler everything
- there should be a way to remove curve in apply operation dialog
- vec("hello", "world") should produce string list
- create the "trash" group for removed curves; note for garbage collection: when curve is used as a source of params for some other curve, we must preserve it (like shadow kid or something)


Задачи 7 октября
1. Вся работоспособность меню файл
2. Вся работоспособность выпадающего меню кривой.
3. Вся работоспособность выпадающего меню группы.


Просто активное поле, в котором можно задать значение. Они дублируют движки.

Сделать автоматическую проверку по X и по Y. Если пользователь устанавливает не правильное - устанавливается максимальное или минимальное соответственно.

По форме с информацией проекта.
Ты форму делаешь табличную - это неудобно. Например, описание - большой длинный текст.


1. Если функция удаляется надо делать запрос "Удалить функцию" и все производные кривые?
И список производных кривых показывать в окне этого запроса.
Если пользователь говорить "да" - удалять.

2. Нужна функция "Скрыть кривую". Но пока на неё не заморачивайся.  Как с этой функцией работать мы позже поймем, когда начнем на практике применять интерфейс. Тем не менее, добавь, пожалуйста, такую кнопку в выпадающее меню, чтобы не забыли, и сделай её не активной.



В блок "Порог" надо добавить ещё пункт. Должно быть:
- Пользовательское значение
- Значения другой кривой (Т.е. ты просто сравниваешь две кривых по всему спектру)
- Свойство кривой

Модуль обработки "Фильтр"

1. Кривая для фильтрации (выбрать кривую)
2. Значение для фильтра (переключатель - "пользовательское значение" / "свойство из кривой")
3. Пользовательское значение (поле, активное если переключатель в позиции "пользовательское значение)
4. Свойство из кривой (выбрать кривую, активируется, если переключатель в позиции "свойства из кривой")
5. Выбрать свойство (выпадающий список собственных свойств кривой, из которой берутся данные)
6. Тип сравнения (выпадающий список: больше, больше или равно, меньше, меньше или равно, равно, не равно)
7. Результат (Выпадающий список: 1/0, значение/0)
8. Кривая для результата (выбрать кривую. Активируется если переключатель "результат" в позиции "значение кривой". По умолчанию устанавливается кривая для фильтрации)


Результат применения модуля:
1. Для случая, когда значение фильтра "ложь" - выдаёт 0
2. Для случая, когда значение фильтра "истина" - выдает:
- 1 (если в поле результат стоит "1")
- 2 (значение кривой, выбираемой для результата, если в поле "результат" стоит "значение/0"


>должна ли кривая, свойства которой используются для генерации другой кривой, включать эту другую своём дереве производных?
Не, давай не будем. Потом включим, если увидим, что нужно.


Инфо вкладку надо более структурной сделать.

Общие сведения:
1. Название
2. Источник
3. Описание

Собственные характеристики
1. Максимум
2. Минимум.
3. Среднее
4. Максимум модуля
5. Минимум модуля
6. Средний модуль

Кнопка: "Редактировать состав характеристик"

В Инфо название и описание должны быть редактируемыми.
Поддержку комментариев - интересная тема, не думал о ней. В первой версии не нужно. Потом может пригодиться.

Может быть имеет смысл сделать две вкладки для текущей кривой:
- Инфо
- Характеристики
?



Представь себе кривую. Набор данных.

Ты с этой кривой можешь делать различные преобразования:
- Продифференцировать
- Проинтегрировать
- Найти максимумы
- Найти минимумы 
- Найти подъемы
- Найти спуски и т.п.

Любое из этих преобразований организовано так, что исходный набор данных преобразуется в набор данных такой же ёмкости. Т.е. тоже в кривую.

Каждое из этих преобразований сделано, как отдельный модуль. И есть библиотека таких модулей.

Теперь представь, что я пользователь. Мне надо построить алгоритм обработки.
Я это делаю так:
1. Подгружаю исходную кривую.
2. Залезаю в библиотеку - выбираю необходимые мне модули и последовательно применяю их к исходной кривой. 

В итоге, если я применил к исходной кривой n разных преобразований, то я имею на выходе n кривых. Все они хранятся и доступны для дальнейшей обработки.

Дальше мне надо, чтобы применение было не последовательным, а древовидным. Т.е. должна быть возможность применить те же преобразования к библиотеке к любой из этих кривых.

Получается дерево вида
Y0
  Y01
Y1
Y2
  Y21
    Y211
      Y212
      Y213
  Y22
Y3
 Y31

И т.п.

Представь себе дерево. Считай, что корень дерева - исходная функция. Каждая ветка - результат обработки предыдущей, на которой она держится.

К этим данным нужна возможность посмотреть на графике любые несколько из созданных кривых.

Далее, нужна возможность делать функции с двумя или несколькими кривыми (суммировать, вычитать и т.п.)

И нужна возможность создавать новые модули обработки кривых и подгружать их в общую библиотеку.



В списке кривых должно быть дерево ТОЛЬКО ПОДГРУЖЕННЫХ ИЛИ УЖЕ ОБРАБОТАННЫХ КРИВЫХ.

1. Русифицируй, пожалуйста. И в дальнейшем делай, пожалуйста все интерфейсы на русском. Перевести на английский всегда успеем.
2. Добавь к каждой кривой выпадающую менюху. В ней дожно быть:
- Добавить дочернюю кривую
- Отобразить на графике
- Удалить
3. Добавь возможность отображать несколько графиков. Требования:
- Должен быть список графиков.
- Должна быть возможность редактировать название графика. И всякие другие свойства - про них отдельно потом поговорим. Пока делаем только название.
- Должна быть возможность переключаться к интересующему графику
- Должна быть возможность настроить состав кривых, отображаемых в графике методом "ткнуть в чекбокс рядом со списком кривых" - суть чекбокса "показывать на активном графике.
- Должна быть возможность открыть график в отдельном окне.
Отдельно нужно спроектировать форму "создание дочерней кривой"


 По графикам - нужна возможность:
1. Просматривать несколько графиков, на каждом из которых отображается по несколько кривых.
2. Переключаться для просмотра от одного графика к другому (через вкладки, через список этих графиков и т.п.)
3. Открывать любой из графиков в отдельном окне.
Из практики - таких графиков может быть одновременно не больше 5 штук.
Чаще всего - 2-3.



Potential Problems:
- Derivative can be 0 on some short range (looking like a plateau), which may be considered
  as peak, under some circumstances (see bleepwave function). If peak contains two equal-height points, is that already a plateu?
- Abrupt changes in Y should be handled somehow too.
- Due to discountinuity of real world, calculating derivative requires caution;
  we cant just D=DY/DX, as it wont produce 0 at extreme points.
- Derivative is very sensitive to noise. Solution: apply median filter, before calculating derivative.


1. Возьми график, в котором все значения положительные.
2. Выдели все подъемы и все спуски.
3. Найди все максимумы (на минимумы пока не заморачивайся)
4. Выдели границы выпуклые точки (производная падает) и вогнутые точки (производная растёт)
5. Для максимумов найди характерные граничные точки справа и слева. Граничной считается ближайшая к пику точка, в которой выполняется одно из двух условий:
   а) В точке производная меняет знак.
   б) В точке производная на соседних с ней участках одного знака и производная на участке ближнем к пику больше по модулю производной на участке дальнем от пика по меньшей мере в S раз. (S - первый эвристический параметр - предусмотреть для него поле ввода)
6. Посчитай для каждого максимума в пределах ограниченного участка максимальную по модулю производную для подъема и спуска.
7. Выдели максимумы, у которых максимальная производная И по подъему, И по спуску больше чем Q% от максимальной амплитуды графика. (Q - второй эвристический параметр - предусмотреть для него поле ввода)

Характеристики нормализации максимальной амплитудой взяты "из здравого смысла". Потому что другого измеримого критерия нет.

Постарайся выполнить алгоритм дословно. Обрати внимание, что тут два эвристических параметра - в пятом и в седьмом пункте.

Перечитай пятый пункт внимательно: фишка в том, что знак второй производной не меняется. Меняется соотношение первых. Когда ты имеешь дискретную формулу, тебе надо сравнивать вторую производную с первой.

Вторая производная меняет знак, если выпуклая кривая переходит в вогнутую. А в точке перелома вторая производная делает резкий скачёк (не обязательно со сменой знака). А точка перелома возможна и между двумя выпуклыми участками и между двумя вогнутыми. Именно тогда возникает скачёк без смены знака.


>когда удаляется первоисходная функция, что делать с её производными? заного их пересчитать уже не выйдет.
